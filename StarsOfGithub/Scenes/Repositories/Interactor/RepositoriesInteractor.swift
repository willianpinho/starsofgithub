//
//  RepositoriesInteractor.swift
//  StarsOfGithub
//
//  Created by Willian Pinho on 21/11/19.
//  Copyright (c) 2019 Willian Pinho. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol RepositoriesBusinessLogic {
    func fetchRepositories(request: Repositories.Fetch.Request)
}

protocol RepositoriesDataStore {
    var someSDKObject: [SomeSDKObject]? { get set }
}

class RepositoriesInteractor: RepositoriesBusinessLogic, RepositoriesDataStore {
    
    var presenter: RepositoriesPresentationLogic?
    var worker: RepositoriesWorker?
    var someSDKObject: [SomeSDKObject]?
    
    // MARK: Fetch
    
    func fetchRepositories(request: Repositories.Fetch.Request) {
        
        #if DEBUG
            self.worker = RepositoriesWorker(storeProtocol: RepositoriesMemoryAPI())
        #else
            self.worker = RepositoriesWorker(storeProtocol: RepositoriesAPI())
        #endif
        
        self.worker?.fetchRepositories(completionHandler: { (result) in
            self.someSDKObject = result
            
            let response = Repositories.Fetch.Response(someSDKObject: result)
            self.presenter?.presentRepositories(response: response)
        })
    }
    
}
