//
//  RepositoriesViewController.swift
//  StarsOfGithub
//
//  Created by Willian Pinho on 21/11/19.
//  Copyright (c) 2019 Willian Pinho. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol RepositoriesDisplayLogic: class {
    func displayRepositories(viewModel: Repositories.Fetch.ViewModel)
}

class RepositoriesViewController: UITableViewController, RepositoriesDisplayLogic {
    
    var interactor: RepositoriesBusinessLogic?
    var router: (NSObjectProtocol & RepositoriesRoutingLogic & RepositoriesDataPassing)?
    private var repositories: [Repositories.Fetch.ViewModel.Repository] = []
    let cellId = "RepositoryTableViewCell"
    /// View which contains the loading text and the spinner
    let loadingView = UIView()
    
    /// Spinner shown during load the TableView
    let spinner = UIActivityIndicatorView()
    
    /// Text shown during load the TableView
    let loadingLabel = UILabel()
    
    
    // MARK: Object lifecycle
    
    init() {
        super.init(nibName: nil, bundle: nil)
        self.setup()
    }
    
    @available(*, unavailable)
    required public init?(coder aDecoder: NSCoder) {
        super.init(coder: aDecoder)
    }
    
    // MARK: Setup
    
    private func setup() {
        let viewController = self
        let interactor = RepositoriesInteractor()
        let presenter = RepositoriesPresenter()
        let router = RepositoriesRouter()
        
        viewController.interactor = interactor
        viewController.router = router
        interactor.presenter = presenter
        presenter.viewController = viewController
        router.viewController = viewController
        router.dataStore = interactor
    }
    
    func setupTableView(tableView: UITableView) {
        tableView.delegate = self
        tableView.dataSource = self
        tableView.separatorStyle = .none
        tableView.bounces = false
        tableView.allowsMultipleSelection = false
        tableView.isUserInteractionEnabled = true
        tableView.estimatedRowHeight = 100
        tableView.rowHeight = UITableView.automaticDimension
    }
    
    // MARK: View lifecycle
    
    override func viewDidLoad() {
        super.viewDidLoad()
        self.displayView()
        self.registerTableViewCell(tableView: self.tableView)
        self.setupTableView(tableView: self.tableView)
        self.fetchRepositories()
    }
    
    func registerTableViewCell(tableView: UITableView) {
        tableView.register(RepositoryTableViewCell.self, forCellReuseIdentifier: cellId)
    }
    
    // MARK: Fetch
    
    func fetchRepositories() {
        let request = Repositories.Fetch.Request()
        self.interactor?.fetchRepositories(request: request)
    }
    
    // MARK: - Display
    
    func displayRepositories(viewModel: Repositories.Fetch.ViewModel) {
        self.repositories = viewModel.repositories
        self.tableView.reloadData()
        self.tableView.separatorStyle = .singleLine
        self.removeLoadingScreen()
    }
    
    private func displayView() {
        self.title = "Stars of Github"
        setLoadingScreen()
    }
    
    // Set the activity indicator into the main view
    private func setLoadingScreen() {
        
        // Sets the view which contains the loading text and the spinner
        let width: CGFloat = 120
        let height: CGFloat = 30
        let x = (tableView.frame.width / 2) - (width / 2)
        let y = (tableView.frame.height / 2) - (height / 2) - (navigationController?.navigationBar.frame.height)!
        loadingView.frame = CGRect(x: x, y: y, width: width, height: height)
        
        // Sets loading text
        loadingLabel.textColor = .gray
        loadingLabel.textAlignment = .center
        loadingLabel.text = "Loading..."
        loadingLabel.frame = CGRect(x: 0, y: 0, width: 140, height: 30)
        
        // Sets spinner
        spinner.style = .large
        spinner.frame = CGRect(x: 0, y: 0, width: 30, height: 30)
        spinner.startAnimating()
        
        // Adds text and spinner to the view
        loadingView.addSubview(spinner)
        loadingView.addSubview(loadingLabel)
        
        tableView.addSubview(loadingView)
        
    }
    
    // Remove the activity indicator from the main view
    private func removeLoadingScreen() {
        
        // Hides and stops the text and the spinner
        spinner.stopAnimating()
        spinner.isHidden = true
        loadingLabel.isHidden = true
        
    }
    
}

// MARK: - Delegate and data source
extension RepositoriesViewController {
    
    override func tableView(_ tableView: UITableView,
                            numberOfRowsInSection section: Int) -> Int {
        return self.repositories.count
    }
    
    override func tableView(_ tableView: UITableView,
                            cellForRowAt indexPath: IndexPath) -> UITableViewCell {
        let cell = self.tableView.dequeueReusableCell(withIdentifier: cellId) as! RepositoryTableViewCell
        let currentRepository = self.repositories[indexPath.row]
        cell.repository = currentRepository
        cell.selectionStyle = .none
        return cell
    }
    
    override func tableView(_ tableView: UITableView, heightForRowAt indexPath: IndexPath) -> CGFloat {
        return 100
        
    }
}
